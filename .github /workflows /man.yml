# 自动更新工作程序（保留核心功能）

on:
  # 自动同步：每天UTC+8时间9点执行（北京时间）
  schedule:
    - cron: "0 1 * * *"
  
  # 手动同步：可通过GitHub界面触发
  workflow_dispatch:
    inputs:
      force_update:
        description: '是否强制更新（忽略版本检查）'
        type: boolean
        default: false

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      new_version: ${{ steps.update.outputs.new_version }}
    
    steps:
      # 检出仓库代码
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: worker-repo

      # 版本检查与更新逻辑
      - name: 检查并更新Worker
        id: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 初始化设置
          set -euo pipefail
          start_time=$(date +%s)
          
          # 日志记录函数
          log() {
            local level=$1
            shift
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] [$level] $*"
          }

          # 版本信息获取
          REPO_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s --retry 3 \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_URL")

          # 解析版本信息
          TAG_NAME=$(echo "$RESPONSE" | jq -r '.[0].tag_name')
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.[0].assets[] |select(.name == "worker.zip") | .browser_download_url')
          RELEASE_NOTES=$(echo "$RESPONSE" | jq -r '.[0].body')

          # 版本比较逻辑
          LOCAL_VERSION=$(cat worker-repo/version.txt 2>/dev/null || echo "")
          if [ "$LOCAL_VERSION" = "$TAG_NAME" ] && [ "${{ inputs.force_update }}" != "true" ]; then
            log INFO "已是最新版本，无需更新"
            echo "new_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
            exit 0
          fi

          # 更新文件操作
          echo "$TAG_NAME" > worker-repo/version.txt
          echo "$RELEASE_NOTES" > worker-repo/changelog.md

          # 更新README.md
          {
            echo ""
            echo "## 更新日志 📝"
            echo "### $TAG_NAME"
            echo "$RELEASE_NOTES" | sed 's/^/  /'
            echo "---"
          } >> worker-repo/README.md

          # 输出新版本号
          echo "new_version=$TAG_NAME" >> $GITHUB_OUTPUT

      # 提交变更到仓库
      - name: 提交更改
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: worker-repo
          commit_message: |
            🔄 自动同步Worker版本：${{ steps.update.outputs.new_version }}
            
            更新内容：
            $(cat worker-repo/changelog.md | head -n 5 | sed 's/^/  /')
          branch: main
          file_pattern: "version.txt changelog.md README.md"

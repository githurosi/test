name: Test workflow  # 测试工作流

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      force_sync:
        description: '强制立即同步'
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sync-and-obfuscate:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: 预安装依赖
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq jq

      - name: 检查Worker版本并初始化日志
        id: version_check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          start_time=$(date +%s)
          
          log() { 
            local level=$1
            shift
            echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$level] $@"
          }
          
          # 初始化变量
          FORCE_UPDATE=${{ inputs.force_sync }}
          LOCAL_VERSION=$(cat version.txt 2>/dev/null || echo "0.0.0")
          log "INFO" "开始版本检测..."
          log "DEBUG" "本地版本: ${LOCAL_VERSION}"
          
          # 获取最新版本
          REPO_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases/latest"
          RESPONSE=$(curl -s --retry 3 \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_URL")
          
          # 解析版本信息
          TAG_NAME=$(echo "$RESPONSE" | jq -r '.tag_name')
          RELEASE_NOTES=$(echo "$RESPONSE" | jq -r '.body')
          
          # 版本比较
          if [ "$LOCAL_VERSION" = "$TAG_NAME" ] && [ "$FORCE_UPDATE" != "true" ]; then
            log "INFO" "已是最新版本，无需更新"
            echo "new_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # 准备更新元数据
          log "INFO" "检测到新版本: $TAG_NAME"
          echo "$TAG_NAME" > version.txt
          echo "$RELEASE_NOTES" >> changelog.md
          
          # 生成格式化日志内容（增强版）
          cat > update_content.tmp <<EOF
          # 🎉 项目更新日志
          
          ## 最新版本：$TAG_NAME
          **发布时间**：$(date +'%Y-%m-%d %H:%M:%S')
          
          $(echo "$RELEASE_NOTES" | sed 's/^/- /g' | head -n 8)
          
          ---
          
          **历史更新**：
          - [查看完整日志](./changelog.md)
          EOF

          # 安全更新README.md（终极初始化方案）
          if [ ! -f "README.md" ]; then
            log "INFO" "正在初始化README.md文件..."
            {
              echo "# 项目更新日志"
              echo ""
              echo "<!-- UPDATE_LOG -->"
              echo "<!-- 最新更新将显示在此处 -->"
            } > README.md
          else
            # 确保文件可写
            chmod +w README.md 2>/dev/null || true
          fi

          # 使用sed进行安全替换
          sed -i '/<!-- UPDATE_LOG -->/r update_content.tmp' README.md
          rm update_content.tmp

          echo "new_version=$TAG_NAME" >> $GITHUB_OUTPUT
          total_time=$(( $(date +%s) - start_time ))
          log "INFO" "版本检测耗时: ${total_time}秒"

      - name: 执行混淆更新
        if: steps.version_check.outputs.new_version != '0.0.0'
        run: |
          npm install -g javascript-obfuscator@4.0.0
          echo 'console.log("Worker文件内容");' > _worker.js
          javascript-obfuscator _worker.js \
            --output _worker.obfuscated.js \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 0.75 \
            --dead-code-injection true \
            --dead-code-injection-threshold 0.5 \
            --identifier-names-generator mangled \
            --string-array true \
            --string-array-encoding 'rc4' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --self-defending true \
            --domain-lock 'your-domain.com'
          mv _worker.obfuscated.js _worker.js

      - name: 提交所有变更
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: |
            🔄 智能同步更新 [跳过CI]
            
            版本: ${{ steps.version_check.outputs.new_version }}
            更新内容：
            $(cat changelog.md | head -n 5 | sed 's/^/    /')
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: main
          push_options: "--force-with-lease"
          file_pattern: "version.txt changelog.md README.md *.js"
          skip_fetch: true

name： Test workflow # 测试工作流

开：
  推送：
    分支：
      - 主要
  时间表：
    - cron： “0 1 * * *”
  workflow_dispatch：
    输入：
      force_sync：
        description： '强制立即同步'
        类型：布尔值
        默认值：False

权限：
  内容： 写入
  id-token：写入

并发：
  组： ${{ github.workflow }}-${{ github.ref }}
  正在取消：true

工作机会：
  sync-and-obfuscate 中：
    运行时间：ubuntu-latest
    超时分钟数：10
    步骤：
      #1. 基础环境准备
      - 名称： 检出仓库
        用途：作/checkout@v4
        替换为：
          参考： main
          获取深度： 0

      - 名称： 预安装依赖（精简版）
        运行： |
# 仅保留必要依赖
sudo apt-get update -qq
sudo apt-get install -y -qq jq
      #2. 版本检测引擎（来自代码2）
      - name： 检查Worker版本
        编号： version_check
        环境：
          GITHUB_TOKEN：${{ secrets。GITHUB_TOKEN }}
        运行： |
设置 -euo pipefail
start_time=$（日期 +%s）
          
日志（） {
本地级别 = $1
转变
echo “[$（date +'%Y-%m-%d %H：%M：%S'）] [$level] $@”
          }
          
# 初始化变量
FORCE_UPDATE=${{ inputs.force_sync }}
LOCAL_VERSION=$（cat version.txt 2>/dev/null || echo “0.0.0”）
log “INFO” “开始版本检测...”
log “DEBUG” “本地版本： ${LOCAL_VERSION}”
          
# 获取最新版本
REPO_URL=“https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases/latest”
响应=$（curl -s --retry 3 \
-H “授权：token $GITHUB_TOKEN” \
-H “接受：application/vnd.github.v3+json” \
“$REPO_URL”）
          
# 解析版本信息
TAG_NAME=$（echo “$RESPONSE” | jq -r '.tag_name'）
RELEASE_NOTES=$（echo “$RESPONSE” | jq -r '.body'）
          
# 版本比较
if [ “$LOCAL_VERSION” = “$TAG_NAME” ] & & [ “$FORCE_UPDATE” ！= “true” ];然后
log “INFO” “已是最新版本，无需更新”
echo “new_version=$LOCAL_VERSION” >> $GITHUB_OUTPUT
出口 0
fi
          
# 准备更新元数据
log “INFO” “检测到新版本： $TAG_NAME”
echo “$TAG_NAME” > version.txt
echo “$RELEASE_NOTES” > changelog.md
echo “new_version=$TAG_NAME” >> $GITHUB_OUTPUT
          
# 性能统计
total_time=$（（ $（date +%s） - start_time ））
log “INFO” “版本检测耗时： ${total_time}秒”
      #3. 条件触发混淆流程（仅当有更新时执行）
      - name： 执行混淆更新
        如果： steps.version_check.outputs.new_version ！= '0.0.0'
        运行： |
# 安装混淆工具（保持原有逻辑）
npm install -g javascript-obfuscator@4.0.0
          
# 模拟Worker文件（实际应从外部源获取）
echo 'console.log（“Worker文件内容”）;' > _worker.js
          
# 执行混淆（保持原有配置）
javascript-obfuscator _worker.js \
--输出 _worker.obfuscated.js \
--compact 真 \
--control-flow-flattening true \
--control-flow-flattening-threshold 0.75 \
--dead-code-injection true \
--dead-code-injection-threshold 0.5 \
--identifier-names-generator 被破坏 \
--string-array 真 \
--string-array-encoding 'rc4' \
--string-array-threshold 0.75 \
--transform-object-keys true \
--自卫 真 \
--domain-lock 'your-domain.com'
          
中_worker.obfuscated.js _worker.js
      #4. 统一提交变更
      - name： 提交所有变更
        用途： stefanzweifel/git-auto-commit-action@v5
        替换为：
          commit_message： |
🔄 智能同步更新 [跳过 CI]
            
版本： ${{ steps.version_check.outputs.new_version }}
更新内容：
$（cat changelog.md | head -n 5 | sed 's/^/ /'）
          commit_author：“github-actions[bot] <github-actions[bot]@users.noreply.github.com>”
          分支：main
          push_options：“--force-with-lease”
          file_pattern：“version.txt changelog.md *.js”
          skip_fetch：true

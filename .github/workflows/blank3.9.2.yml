name: Worker 代码混淆与提交

on:
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新模式'
        required: false
        type: boolean
        default: false
  schedule:
    - cron: '0 0 * * *'  # 每天午夜运行

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          path: main-repo
          
      - name: 准备 Worker 仓库
        run: |
          git clone https://github.com/${{ github.repository_owner }}/worker-repo.git
          cd worker-repo
          git checkout main

      - name: 缓存 npm 依赖
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('worker-repo/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: 安装混淆工具
        run: |
          echo "安装 JavaScript 混淆工具..."
          npm install -g javascript-obfuscator@latest
          # 验证安装
          javascript-obfuscator --version

      - name: 混淆 Worker 代码（条件执行）
        id: obfuscate
        if: ${{ github.event_name == 'workflow_dispatch' && (github.event.inputs.force_update == 'true') || github.event_name == 'schedule' }}
        run: |
          set -euo pipefail
          cd worker-repo
          
          echo "开始混淆 Worker 代码..."
          start_time=$(date +%s)
          
          # 创建临时工作目录
          mkdir -p tmp
          cp _worker.js tmp/
          
          # 执行混淆（添加超时处理）
          timeout 10m javascript-obfuscator tmp/_worker.js \
            --output _worker.obfuscated.js \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 0.75 \
            --dead-code-injection true \
            --dead-code-injection-threshold 0.5 \
            --identifier-names-generator mangled \
            --string-array true \
            --string-array-encoding 'rc4' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --self-defending true \
            --domain-lock 'your-domain.com' || {
              echo "❌ 混淆过程超时或失败"
              exit 1
            }
          
          # 替换原文件
          mv _worker.obfuscated.js _worker.js
          rm -rf tmp
          
          end_time=$(date +%s)
          echo "混淆完成，耗时: $((end_time - start_time)) 秒"

      - name: 准备提交信息
        id: prepare-commit
        if: ${{ success() && steps.obfuscate.outcome == 'success' }}
        run: |
          cd worker-repo
          # 生成变更日志摘要（示例中取前5行）
          CHANGELOG_SUMMARY=$(head -n 5 changelog.md | sed 's/^/    /')
          # 生成提交消息
          COMMIT_MESSAGE="🔄 自动同步 Worker 版本: $(date +%Y-%m-%d)
          
          更新内容：
          $CHANGELOG_SUMMARY
          
          ${{ github.event.inputs.force_update == 'true' && '🔄 强制更新模式' || '' }}"
          
          echo "commit_message<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 提交更改（条件执行）
        if: ${{ success() && steps.obfuscate.outcome == 'success' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: worker-repo
          commit_message: ${{ steps.prepare-commit.outputs.commit_message }}
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: main
          push_options: "--force-with-lease"
          file_pattern: "version.txt changelog.md README.md *.js"
          create_branch: false

      - name: 完成通知
        if: ${{ always() }}
        run: |
          echo "⏳ 工作流执行状态: ${{ job.status }}"
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ 工作流执行成功"
          else
            echo "❌ 工作流执行失败"
            exit 1
          fi

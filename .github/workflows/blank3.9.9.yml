name: Auto Update Worker

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs:
      force_update:
        description: '强制更新（覆盖所有检查）'
        type: boolean
        default: false

permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  update:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      new_version: ${{ steps.update.outputs.new_version }}
      should_update: ${{ steps.update.outputs.should_update }}
    steps:
      - name: 检出仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: worker-repo

      - name: 预安装依赖
        run: |
          sudo apt-get update && sudo apt-get install -y pigz jq
          npm install -g javascript-obfuscator@4.0.0

      - name: 检查并更新 Worker
        id: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -euo pipefail
          start_time=$(date +%s)
          
          log() { 
            local level=$1
            shift
            echo "[$(date +'%Y-%m-%d %H:%M:%S')] [$level] $@"
          }
          
          FORCE_UPDATE=${{ inputs.force_update }}
          LOCAL_VERSION=$(cat worker-repo/version.txt 2>/dev/null || echo "")
          MISSING_CRITICAL_FILES="false"
          for file in worker-repo/version.txt worker-repo/changelog.md; do
            [ ! -f "$file" ] && MISSING_CRITICAL_FILES="true"
          done

          REPO_URL="https://api.github.com/repos/bia-pain-bache/BPB-Worker-Panel/releases"
          RESPONSE=$(curl -s --retry 3 \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "$REPO_URL")
          
          TAG_NAME=$(echo "$RESPONSE" | jq -r '.[0].tag_name')
          DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.[0].assets[] | select(.name == "worker.zip") | .browser_download_url')
          RELEASE_NOTES=$(echo "$RESPONSE" | jq -r '.[0].body')
          
          UPDATE_CONDITION="false"
          [ "$FORCE_UPDATE" = "true" ] && UPDATE_CONDITION="true"
          [ "$MISSING_CRITICAL_FILES" = "true" ] && UPDATE_CONDITION="true"
          [ "$LOCAL_VERSION" != "$TAG_NAME" ] && UPDATE_CONDITION="true"
          
          [ "$UPDATE_CONDITION" = "false" ] && {
            [ -f "worker-repo/changelog.md" ] && {
              EXISTING_NOTES=$(tail -n +2 worker-repo/changelog.md)
              [[ ! "$RELEASE_NOTES" == *"$EXISTING_NOTES"* ]] && UPDATE_CONDITION="true"
            }
          }

          [ "$UPDATE_CONDITION" = "false" ] && {
            echo "new_version=$LOCAL_VERSION" >> $GITHUB_OUTPUT
            echo "should_update=false" >> $GITHUB_OUTPUT
            exit 0
          }

          log "INFO" "检测到更新需求，开始处理..."
          wget -q -O worker.zip "$DOWNLOAD_URL"
          unzip -o worker.zip -d worker-repo/
          rm worker.zip
          
          echo "$TAG_NAME" > worker-repo/version.txt
          echo "$RELEASE_NOTES" > worker-repo/changelog.md
          
          # 生成差异化历史记录
          HISTORICAL_NOTES=$(cat worker-repo/changelog.md | awk -v tag="$TAG_NAME" \
            '/^[0-9]/ && !seen[tag]++ {print; next} !seen[tag]++ {print}')

          # 生成README内容
          README_CONTENT=$(cat <<EOF
          # 项目更新日志

          ## 📅 最新更新：$TAG_NAME

          $(echo "$RELEASE_NOTES" | sed 's/^/- /g')

          ---

          ## 历史更新记录

          $(echo "$HISTORICAL_NOTES" | sed 's/^/- /g' | sed '/^$/d')

          EOF
          )

          echo "$README_CONTENT" > worker-repo/README.md
          echo "new_version=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "should_update=true" >> $GITHUB_OUTPUT
          total_time=$(( $(date +%s) - start_time ))
          log "INFO" "总执行时间: ${total_time}秒"

      - name: 混淆Worker代码（条件执行）
        if: ${{ steps.update.outputs.should_update == 'true' || inputs.force_update == 'true' }}
        run: |
          set -euo pipefail
          cd worker-repo
          mkdir -p tmp
          cp _worker.js tmp/
          javascript-obfuscator tmp/_worker.js \
            --output _worker.obfuscated.js \
            --compact true \
            --control-flow-flattening true \
            --control-flow-flattening-threshold 0.75 \
            --identifier-names-generator mangled \
            --string-array true \
            --string-array-encoding 'rc4' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --self-defending true \
            --domain-lock 'your-domain.com'
          mv _worker.obfuscated.js _worker.js
          rm -rf tmp

      - name: 提交更改（条件执行）
        if: ${{ steps.update.outputs.should_update == 'true' || inputs.force_update == 'true' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          repository: worker-repo
          commit_message: |
            🔄 自动同步 Worker 版本: ${{ steps.update.outputs.new_version }}
             
            更新内容：
            $(cat worker-repo/changelog.md | head -n 5 | sed 's/^/    /')
            
            ${{ inputs.force_update == 'true' && '🔄 强制更新模式' || '' }}
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: main
          push_options: "--force-with-lease"
          file_pattern: "version.txt changelog.md README.md *.js"
